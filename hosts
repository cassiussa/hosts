# Create an OSEv3 group that contains the master, nodes, etcd, and lb groups.
# The lb group lets Ansible configure HAProxy as the load balancing solution.
# Comment lb out if your load balancer is pre-configured.
[OSEv3:children]
masters
nodes
etcd
lb
glusterfs
glusterfs_registry

# Set variables common for all OSEv3 hosts
[OSEv3:vars]
ansible_ssh_user=root
openshift_deployment_type=origin
#debug_level=8
#openshift_debug_level="{{ debug_level }}"
#openshift_master_audit_config=true







# If you provide a value for the openshift_master_named_certificates parameter, set this parameter to true
#openshift_master_overwrite_named_certificates=true

# Provisions a master API certificate - https://docs.openshift.com/container-platform/3.11/install_config/certificate_customization.html#configuring-custom-certificates-master
#openshift_master_named_certificates=[{"certfile": "/etc/ssl/m.okd.supercass.com/certificate_only.crt", "keyfile": "/etc/ssl/m.okd.supercass.com/domain_key.key", "cafile": "/etc/ssl/m.okd.supercass.com/ca-bundle.crt", "names": ["m.okd.supercass.com"]}]

# Provisions a wildcard API certificate - https://docs.openshift.com/container-platform/3.11/install_config/certificate_customization.html#configuring-custom-certificates-wildcard
# I'm unsure if the CA needed to be in "certfile" so I left it out.  As for "cafile", I also don't know if I need to somehow find the root CA or if the cross-signed one in the LetsEncrypt CA is fine
openshift_hosted_router_certificate={"certfile": "/etc/ssl/star_app_okd_supercass_com/crt.crt", "keyfile": "/etc/ssl/star_app_okd_supercass_com/private.key", "cafile": "/etc/ssl/star_app_okd_supercass_com/CABundle.crt"}

# Configure custom ca certificate
# NOTE: CA certificate will not be replaced with existing clusters.
# This option may only be specified when creating a new cluster or
# when redeploying cluster certificates with the redeploy-certificates
# playbook. playbooks/redeploy-certificates.yml
#openshift_master_ca_certificate={'certfile': '/etc/ssl/m.okd.supercass.com/ca-bundle.crt', 'keyfile': '/etc/ssl/m.okd.supercass.com/domain_key.key'}











# Custom variables that get used in this hosts file
app_dns_prefix=app
public_hosted_zone=okd.supercass.com
load_balancer_hostname=m.{{public_hosted_zone}}


# Configuring Cluster Variables
openshift_hostname=master-internal.okd.supercass.com
openshift_public_hostname=m.okd.supercass.com
openshift_public_ip=74.118.36.66

# Enable this to use the 3.11 repo
# COMMENT THIS OUT WHEN 3.10 AND UPDATE 2ND DOWN WITH "3.10"
#openshift_additional_repos=[{'id': 'centos-okd-ci', 'name': 'centos-okd-ci', 'baseurl' :'https://rpms.svc.ci.openshift.org/openshift-origin-v3.11', 'gpgcheck' :'0', 'enabled' :'1'}]
openshift_release="3.10"

# GlustFS Containerized - storage cluster for applications
openshift_storage_glusterfs_namespace=app-storage
openshift_storage_glusterfs_name=storage
openshift_storage_glusterfs_storageclass=true
openshift_storage_glusterfs_storageclass_default=false
openshift_storage_glusterfs_block_deploy=false
#openshift_storage_glusterfs_block_host_vol_create=true
#openshift_storage_glusterfs_block_host_vol_size=52
#openshift_storage_glusterfs_block_storageclass=true
#openshift_storage_glusterfs_block_storageclass_default=false

openshift_master_dynamic_provisioning_enabled=True


# OCS storage cluster for OpenShift infrastructure
openshift_storage_glusterfs_registry_namespace=infra-storage  
openshift_storage_glusterfs_registry_storageclass=false       
openshift_storage_glusterfs_registry_block_deploy=true   
openshift_storage_glusterfs_registry_block_host_vol_create=true    
openshift_storage_glusterfs_registry_block_host_vol_size=200   
openshift_storage_glusterfs_registry_block_storageclass=true
openshift_storage_glusterfs_registry_block_storageclass_default=false


# Docker Registry
openshift_hosted_registry_storage_kind=glusterfs
openshift_hosted_registry_storage_volume_size=20Gi
openshift_hosted_registry_selector="node-role.kubernetes.io/infra=true"


openshift_use_system_containers=False


# Use firewalld on clean install
os_firewall_use_firewalld=true

# Configuring Cluster Metrics
openshift_metrics_cassandra_storage_type=dynamic
openshift_metrics_install_metrics=true 
openshift_metrics_storage_kind=dynamic
openshift_metrics_storage_volume_size=20Gi
openshift_metrics_cassandra_pvc_storage_class_name='glusterfs-storage-block'
openshift_metrics_hawkular_nodeselector={"node-role.kubernetes.io/infra": "true"}
openshift_metrics_cassandra_nodeselector={"node-role.kubernetes.io/infra": "true"}
openshift_metrics_heapster_nodeselector={"node-role.kubernetes.io/infra": "true"}


# Configuring Cluster Logging
openshift_logging_install_logging=true
openshift_logging_es_pvc_dynamic=true 
openshift_logging_es_pvc_size=50Gi
openshift_logging_es_cluster_size=3
openshift_logging_es_pvc_storage_class_name='glusterfs-storage-block'
openshift_logging_kibana_nodeselector={"node-role.kubernetes.io/infra": "true"}
openshift_logging_curator_nodeselector={"node-role.kubernetes.io/infra": "true"}
openshift_logging_es_nodeselector={"node-role.kubernetes.io/infra": "true"}


# Customizing Service Catalog Options
openshift_enable_service_catalog=false


# etcd
openshift_use_etcd_system_container=true

# https://github.com/openshift/openshift-ansible/issues/9894#issuecomment-418233398
openshift_disable_check=disk_availability,docker_storage,memory_availability
openshift_check_min_host_memory_gb=1
openshift_check_min_host_disk_gb=10


# uncomment the following to enable htpasswd authentication; defaults to AllowAllPasswordIdentityProvider
#openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'True', 'kind': 'HTPasswdPasswordIdentityProvider', 'file': '/etc/origin/master/htpasswd'}]
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'True', 'kind': 'HTPasswdPasswordIdentityProvider'}]
#openshift_master_htpasswd_users={'admin': '$apr1$zAhyA9Ko$rBxBOwAwwtRuuaw8OtCwH0'}


# Native high availability cluster method with optional load balancer.
# If no lb group is defined installer assumes that a load balancer has
# been preconfigured. For installation the value of
# openshift_master_cluster_hostname must resolve to the load balancer
# or to one or all of the masters defined in the inventory if no load
# balancer is present.
openshift_master_cluster_method=native
#openshift_master_cluster_hostname="{{ load_balancer_hostname }}"
openshift_master_cluster_hostname="master-internal.okd.supercass.com"
openshift_master_cluster_public_hostname="{{ load_balancer_hostname }}"
openshift_master_default_subdomain="{{ app_dns_prefix }}.{{ public_hosted_zone }}"


openshift_docker_use_system_container=False

# host group for masters
[masters]
m01.okd.supercass.com
m02.okd.supercass.com
m03.okd.supercass.com


# host group for etcd
[etcd]
m01.okd.supercass.com
m02.okd.supercass.com
m03.okd.supercass.com


# Specify load balancer host
[lb]
m.okd.supercass.com


# host group for nodes, includes region info
[nodes]
m01.okd.supercass.com openshift_node_group_name='node-config-master'
m02.okd.supercass.com openshift_node_group_name='node-config-master'
m03.okd.supercass.com openshift_node_group_name='node-config-master'
i01.okd.supercass.com openshift_node_group_name='node-config-infra'
i02.okd.supercass.com openshift_node_group_name='node-config-infra'
app01.okd.supercass.com openshift_node_group_name='node-config-compute'
app02.okd.supercass.com openshift_node_group_name='node-config-compute'
app03.okd.supercass.com openshift_node_group_name='node-config-compute'


[glusterfs]
app01.okd.supercass.com glusterfs_zone=1 glusterfs_devices='["/dev/sdb"]'
app02.okd.supercass.com glusterfs_zone=2 glusterfs_devices='["/dev/sdb"]'
app03.okd.supercass.com glusterfs_zone=3 glusterfs_devices='["/dev/sdb"]'


[glusterfs_registry]
app01.okd.supercass.com glusterfs_zone=1 glusterfs_devices='[ "/dev/sdb" ]'
app02.okd.supercass.com glusterfs_zone=2 glusterfs_devices='[ "/dev/sdb" ]'
app03.okd.supercass.com glusterfs_zone=3 glusterfs_devices='[ "/dev/sdb" ]'

