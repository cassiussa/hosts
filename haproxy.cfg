# Global settings
#---------------------------------------------------------------------
global
    maxconn     20000
    log         /dev/log local0 info
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    user        haproxy
    group       haproxy
    daemon


    ssl-default-bind-options no-sslv3
    ssl-default-bind-ciphers ECDH+AESGCM:ECDH+CHACHA20:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS

    ssl-default-server-options no-sslv3
    ssl-default-server-ciphers ECDH+AESGCM:ECDH+CHACHA20:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS

    tune.ssl.default-dh-param 2048



    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          300s
    timeout server          300s
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 20000

listen stats
    bind :9000
    mode http
    stats enable
    stats uri /






# EXTERNAL MASTER WRITING
frontend master-external
    # 'crt' parameter must include both the full chain AND key, catted together, order doesn't matter
    bind 74.118.36.66:443 ssl crt /etc/ssl/m.okd.supercass.com/master_all.crt
    mode http

    option forwardfor
    option http-server-close
    reqadd X-Forwarded-Proto:\ https

    # if they've arrived encrypted, send them to the back end
    acl tls_test ssl_fc_sni m.okd.supercass.com
    use_backend master-external if tls_test

    #acl host_test hdr(host) -i m.okd.supercass.com
    # if this is test AND NOT https, make it https
    #redirect scheme https if !{ ssl_fc } host_test
    #use_backend master-external if host_test

backend master-external
    balance source
    mode http
    http-send-name-header Host
    server     m01.okd.supercass.com 74.118.36.67:443 cookie m01 check ssl verify none
    server     m02.okd.supercass.com 74.118.36.68:443 cookie m01 check ssl verify none
    server     m03.okd.supercass.com 74.118.36.69:443 cookie m01 check ssl verify none






# INTERNAL MASTER ROUTING
frontend master-internal
    bind 74.118.36.93:443
    mode tcp
    option tcplog
    default_backend master-internal

backend master-internal
    balance source
    mode tcp
    server      m01 74.118.36.67:443
    server      m02 74.118.36.68:443
    server      m03 74.118.36.69:443






# APPLICATIONS
frontend app-router-stats
    bind 74.118.36.94:1936
    default_backend app-router-stats
    mode http
    option tcplog
backend app-router-stats
    balance source
    mode http
    server	router01 74.118.36.70:1936 check
    server	router02 74.118.36.71:1936 check

frontend app-router-http
    bind 74.118.36.94:80
#    use_backend app-router-http if { hdr_end(Host) -i .app.okd.supercass.com } 
    mode tcp
    option tcplog

    option forwardfor
    option http-server-close
    reqadd X-Forwarded-Proto:\ http
    default_backend app-router-http

backend app-router-http
    balance source
    mode tcp
    server	router01 74.118.36.70:80
    server      router02 74.118.36.71:80


frontend app-router-https
    # 'crt' parameter must include both the full chain AND key, catted together, order doesn't matter
    bind 74.118.36.94:443 ssl crt /etc/ssl/star_app_okd_supercass_com/cert.pem
    mode http

    option forwardfor
    option http-server-close
    reqadd X-Forwarded-Proto:\ https

    # if they've arrived encrypted, send them to the back end
    acl tls_test ssl_fc_sni_end app.okd.supercass.com
    use_backend app-router-https if tls_test

backend app-router-https
    balance source
    mode http
    http-send-name-header Host
    server     i01.okd.supercass.com 74.118.36.70:443 cookie router01 check ssl verify none
    server     i02.okd.supercass.com 74.118.36.71:443 cookie router02 check ssl verify none

